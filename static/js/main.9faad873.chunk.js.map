{"version":3,"sources":["components/styles/StyledLayout.js","components/styles/StyledInput.js","components/styles/StyledRow.js","components/styles/StyledButton.js","Calculate.js","components/Calculator.js","App.js","index.js"],"names":["Content","Layout","StyledLayout","styled","StyledContent","StyledInputContainer","div","StyledInput","Input","StyledRow","Row","StyledButtonContainer","doMultiplication","Button","x","y","parseFloat","doDivision","operants","RegExp","specialCases","doCalculation","input","cleanse","specialCase","replace","correct","matched_part","calculated","toString","simpleCalculation","result","op","match","pattern","exec","matched_string","includes","split","method","parenthesisRE","slice","err","console","log","Calculator","inputBox","useRef","useState","setInput","position","setPosition","useEffect","document","querySelector","selectionStart","selectionEnd","validKeys","removeKeys","removeInput","e","key","caretPosition","target","newInput","length","pressKey","preventDefault","onKeyPress","onKeyDown","id","type","ref","value","autoComplete","Fragment","map","rowIndex","item","href","alt","onClick","buttonId","className","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9faad873.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Layout} from 'antd';\n\nconst { Content } = Layout;\n\nexport const StyledLayout = styled(Layout)`\n  background: #585f5b;\n  width: 500px;\n  border-radius: 10px;\n  height: 550px;\n`;\n\nexport const StyledContent = styled(Content)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;","import styled from 'styled-components';\nimport { Input } from 'antd';\n\nexport const StyledInputContainer = styled.div`\n  height: 15%;\n  display: flex;\n  padding: 1.5rem 1.5rem 0 1.5rem;\n`;\n\n\nexport const StyledInput = styled(Input)`\n  width: 100%;\n  font-family: 'font';\n  font-size: 25px;\n  padding: 1rem;\n`;\n","import styled from 'styled-components';\nimport { Row } from 'antd';\n\nexport const StyledRow = styled(Row)`\n  display: flex;\n  width: 100%;\n  margin: 0.2rem;\n`;","import styled from 'styled-components';\nimport { Button } from 'antd';\n\nexport const StyledButtonContainer = styled.div`\n  height: 100%;\n  display: flex;\n  padding: 1.2rem;\n  flex-wrap: wrap;\n`;\n\nexport const StyledButton = styled(Button)`\n  display: flex;\n  width: 100%;\n  margin: 0.2rem;\n  height: 100%;\n  width: 100px;\n  margin: 0.2rem; \n  flex-basis: 100%;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n`;\n","const doMultiplication = (x, y) => {\n  return parseFloat(x) * parseFloat(y)\n}\n\nconst doDivision = (x, y) => {\n  return parseFloat(x) / parseFloat(y)\n}\n\nconst doSummation = (x, y) => {\n  return parseFloat(x) + parseFloat(y)\n}\n\nconst doSubstraction = (x, y) => {\n  return parseFloat(x) - parseFloat(y)\n}\n\nconst operants = {\n  \"*/\": {\n    \"pattern\": new RegExp(/-?\\d+\\.?\\d*(\\*|\\/)-?\\d+\\.?\\d*/)\n  },\n  \"-\": {\n    \"pattern\": new RegExp(/-?\\d+\\.?\\d*--?\\d+\\.?\\d*/),\n    \"method\": doSubstraction\n  },\n  \"+\": {\n    \"pattern\": new RegExp(/-?\\d+\\.?\\d*\\+-?\\d+\\.?\\d*/),\n    \"method\": doSummation\n  }\n}\n\nconst specialCases = {\n  \"--\": \"+\",\n  \"++\": \"+\",\n  \"+-\": \"-\",\n  \"-+\": \"-\"\n};\n\nconst doCalculation = (input) => {\n  \n  const cleanse = (input) => {\n    for (var specialCase in specialCases) {\n      input = input.replace(specialCase, specialCases[specialCase]);\n    }\n    return input;\n  }\n\n  const correct = (matched_part, calculated) => {\n    if (matched_part[0] === \"-\" && calculated >= 0) {\n      return \"+\" + calculated.toString();\n    }\n    return calculated.toString();\n  }\n\n  const simpleCalculation = (input) => {\n    let result = input;\n    for (let op in operants) {\n      let match = operants[op].pattern.exec(result);\n      while (match && match[0]) {\n        let matched_string = cleanse(match[0]);\n        if (matched_string.includes(\"*\")) {\n          var [x, y] = matched_string.split(\"*\");\n          var method = doMultiplication;\n        } else if (matched_string.includes(\"/\")) {\n          var [x, y] = matched_string.split(\"/\");\n          var method = doDivision;\n        } else {\n          var [x, y] = matched_string.split(op);\n          var method = operants[op].method;\n        }\n        let calculated = correct(matched_string, method(x, y));\n        result = cleanse(result.replace(matched_string, calculated));\n        match = operants[op].pattern.exec(result);\n      }\n    }\n    return result;\n  }\n\n  try {\n    let result = input;\n    let parenthesisRE = new RegExp(/\\([^()]*\\)/);\n    let match = parenthesisRE.exec(result);\n    while (match && match[0]) {\n      let matched_string = match[0];\n      let calculated = simpleCalculation(matched_string.slice(1,-1));\n      result = cleanse(result.replace(matched_string, calculated));\n      match = parenthesisRE.exec(result);\n    }\n    return simpleCalculation(result);\n  }\n  catch (err) {\n    console.log(err);\n    return \"Zero division is not allowed\";\n  }\n}\n\nexport default doCalculation;","import { StyledLayout, StyledContent } from './styles/StyledLayout';\nimport { StyledInput, StyledInputContainer } from './styles/StyledInput';\nimport { StyledRow } from './styles/StyledRow';\nimport { StyledButtonContainer, StyledButton } from './styles/StyledButton';\nimport React, {useEffect, useState, useRef} from 'react';\nimport doCalculation from '../Calculate';\n\nconst Calculator = () => {\n\n  /*\n   TODO: \n    1. Add input parenthesis balance check bofore calculate\n    2. Add invalid input check before calculate. eg ---, +++, ** etc\n  */\n\n  const inputBox = useRef();\n\n  const [input, setInput] = useState('');\n  const [position, setPosition] = useState();\n\n  useEffect(() => {\n    document.querySelector('#input-box').selectionStart = position;\n    document.querySelector('#input-box').selectionEnd = position;\n  }, [input]);\n\n  const buttons = [\n    ['(', ')', '.', 'AC'],\n    ['7', '8', '9', '+'],\n    ['4', '5', '6', '-'],\n    ['1', '2', '3', '*'],\n    ['0', '=', '/'],\n  ];\n\n  const validKeys = [\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '+', '-', '*', '/', '(', ')'\n  ]\n\n  const removeKeys = [\n    'Delete', 'Backspace'\n  ]\n\n  const clickButton = (buttonId) => {\n    if (buttonId === 'AC') {\n      setInput('');\n    } else if (buttonId === '=') {\n      setInput(doCalculation(input));\n    } else {\n      setInput(input + buttonId);\n    }\n  };\n\n  const removeInput = (e) => {\n    let key = e.key;\n    if (!removeKeys.includes(key)) {return;}\n    let caretPosition = e.target.selectionStart;\n    let newInput = '';\n    if (key === 'Backspace' && caretPosition !== 0) {\n      newInput = input.slice(0,caretPosition-1) + input.slice(caretPosition,);\n    } else if (key === 'Delete' && caretPosition !== input.length) {\n      newInput = input.slice(0,caretPosition) + input.slice(caretPosition + 1,);\n    }\n    setInput(newInput);\n    setPosition(caretPosition);\n  }\n\n  const pressKey = (e) => {\n    let key = e.key;\n    if (validKeys.includes(key)) {\n      setInput(input + key)\n    } else if (key === '=' || key === 'Enter') {\n      console.log(input)\n      setInput(doCalculation(input));\n    } else if (removeKeys.includes(key)) {\n      removeInput(e);\n    } else {\n      e.preventDefault();\n    }\n  };\n  \n  return(\n    <StyledLayout>\n      <StyledContent>\n        <StyledInputContainer\n          onKeyPress={e => pressKey(e)}\n          onKeyDown={e => removeInput(e)}\n        >\n          <StyledInput\n            id=\"input-box\"\n            type=\"text\"\n            ref={inputBox}\n            onKeyPress={e => pressKey(e)}\n            onKeyDown={e => removeInput(e)}\n            value={input}\n            autoComplete=\"off\"\n          />\n        </StyledInputContainer>\n        <StyledButtonContainer\n          onKeyPress={e => pressKey(e)}\n          onKeyDown={e => removeInput(e)}\n        >\n          <React.Fragment>\n            {\n              buttons.map(rowIndex => (\n                <StyledRow key={rowIndex} >\n                  {\n                    rowIndex.map(item => \n                      <a href=\"#\" alt={item} onClick={e => clickButton(e.target.id)} className=\"my-button\" id={item}>\n                      </a>\n                    )\n                  }\n                </StyledRow>\n              ))\n            }\n          </React.Fragment>\n        </StyledButtonContainer>\n      </StyledContent>\n    </StyledLayout>\n  )\n};\n\nexport default Calculator;","import './App.css';\nimport Calculator from './components/Calculator';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <div className=\"background\">\n      <Calculator/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}